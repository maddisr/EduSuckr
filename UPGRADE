These database changes is for that case you havn't done modifications yet.
You don't want to loose data, but you need your db work fine.

alter table prefix_educourses add column start_agregate char(255);
alter table prefix_educourses add column stop_agregate char(255);
alter table prefix_posts add column hidden int(1) DEFAULT 0;
alter table prefix_comments add column hidden int(1) DEFAULT 0;

LATEST CHANGES IN DB
following tells to db that no duplication in relations tables anymore:
ALTER IGNORE TABLE prefix_course_rels_comments ADD PRIMARY KEY (course_guid, link);
ALTER IGNORE TABLE prefix_course_rels_posts ADD PRIMARY KEY (course_guid, link);


LATEST LATEST CHANGES
ALTER IGNORE TABLE prefix_comments ADD COLUMN post_author char(255);

more latest latest:
alter table prefix_educourses modify column start_agregate bigint(20);
alter table prefix_educourses modify column stop_agregate bigint(20);
alter table prefix_educourses modify column signup_deadline bigint(20);
alter table prefix_educourses modify column course_starting_date bigint(20);
alter table prefix_educourses modify column course_ending_date bigint(20);
alter table prefix_assignments modify column deadline bigint(20);

more latest latest latest:
CREATE TABLE IF NOT EXISTS prefix_log (
    id int(5) NOT NULL PRIMARY KEY AUTO_INCREMENT,
    created TIMESTAMP DEFAULT NOW(),
    log TEXT
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;
alter table prod_statistics add column log int(5);

== Hidden moved into relations ==
First add hidden to _rels:
  ALTER TABLE prefix_course_rels_posts ADD COLUMN hidden int(1) DEFAULT 0;
  ALTER TABLE prefix_course_rels_comments ADD COLUMN hidden int(1) DEFAULT 0;
Run migration to move hidden data from _posts and _comments to _rels: suckr_upgrade_hidden_to_rels().
When the process has been completed, get rid of hidden in _posts and _comments:
  ALTER TABLE prefix_posts DROP COLUMN hidden;
  ALTER TABLE prefix_comments DROP COLUMN hidden;

== 08.11.2012 Added blog_base for participants; 0.5.1 to 0.5.2 ==
Add blog_base column to participants table:
  ALTER TABLE prefix_participants ADD COLUMN blog_base char(255);
Populate blog_base column with data from blog column:
  UPDATE prefix_participants SET blog_base = blog;


--Add assigmnet_id to post_rels--
ALTER TABLE prefix_course_rels_posts ADD COLUMN assignment_id bigint(20) DEFAULT NULL;
ALTER TABLE prefix_course_rels_posts ADD FOREIGN KEY (assignment_id) REFERENCES prefix_assignments (assignment_id) ON DELETE SET NULL;